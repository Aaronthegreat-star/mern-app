name: Terraform workflow

on: 
 push:
   branches:
    - main
 pull_request:
    branches:
    - main

jobs:
  terraform-:
    runs-on: ubuntu-latest

    steps:
     - name: Checkout code
       uses: actions/checkout@v2

    
     -  name: setting up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

     -  name: Setting up API token
        run: echo "export TF_VAR_api_token=${{secrets.API_TOKEN}}" >> $GITHUB_ENV

     -  name: Terraform init
        run: |
         cd ./infrastructure
         terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

    
     -  name: Terraform format
        run: terraform fmt

     -  name: Terraform plan
        run: |
         cd ./infrastructure
         terraform plan
        continue-on-error: true #continue the workflow even if an error is thrown up
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          TF_VAR_api_token: ${{ secrets.API_TOKEN }}

     -  name: Terraform apply
        id: apply
        if: github.event_name == 'push'
        run: |
         cd ./infrastructure
         terraform plan -out=plan.tfplan
         terraform apply -auto-approve plan.tfplan
        continue-on-error: true  #continues the workflow even if an error is thrown up
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          TF_VAR_api_token: ${{ secrets.API_TOKEN }}

     -  name: Terraform Destroy
        if: ${{ steps.apply.outcome == 'failure' }} 
        run: |
          cd ./infrastructure
          terraform destroy -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1


  
